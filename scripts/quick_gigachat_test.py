#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç GigaChat API
"""

import os
import sys
import requests
import uuid
from dotenv import load_dotenv
from pathlib import Path

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
env_path = Path(__file__).parent.parent / '.env'
load_dotenv(env_path)

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç GigaChat API"""
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞...")
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üìÑ –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É: {env_path}")
    print(f"üìÑ –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {env_path.resolve()}")
    print(f"üìÑ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {env_path.exists()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ .env —Ñ–∞–π–ª—ã
    possible_env_files = [
        Path('.env'),
        Path('/.env'),
        Path.home() / '.env',
        Path(__file__).parent / '.env',
        Path(__file__).parent.parent / '.env',
        Path(os.getcwd()) / '.env'
    ]
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ .env —Ñ–∞–π–ª—ã:")
    for env_file in possible_env_files:
        abs_path = env_file.resolve()
        exists = env_file.exists()
        print(f"  {'‚úÖ' if exists else '‚ùå'} {abs_path}")
        if exists:
            try:
                with open(env_file, 'r') as f:
                    content = f.read()
                    if 'GIGACHAT_API_KEY=' in content:
                        # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∫–ª—é—á–æ–º
                        for line in content.split('\n'):
                            if line.strip().startswith('GIGACHAT_API_KEY='):
                                key = line.split('=', 1)[1].strip()
                                print(f"    üîë –°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á: {key[:15]}...{key[-15:]}")
                                break
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"\nüåê –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GIGACHAT_API_KEY:")
    env_key = os.environ.get('GIGACHAT_API_KEY')
    if env_key:
        print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–∞: {env_key[:15]}...{env_key[-15:]}")
    else:
        print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ–º –∫–ª—é—á –ø—Ä—è–º–æ –∏–∑ —Ñ–∞–π–ª–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É—è dotenv
    print(f"\nüîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ–º –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞...")
    api_key = None
    if env_path.exists():
        with open(env_path, 'r') as f:
            for line in f:
                if line.strip().startswith('GIGACHAT_API_KEY='):
                    api_key = line.split('=', 1)[1].strip()
                    print(f"üìÑ –ö–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞: {api_key[:15]}...{api_key[-15:]}")
                    break
    
    if not api_key:
        print("‚ùå GIGACHAT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ")
        return False
    print(f"üìè –î–ª–∏–Ω–∞ –∫–ª—é—á–∞: {len(api_key)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –∏–∑ .env
    expected_ending = "NjczOQ=="  # –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –≤–∞—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –∫–ª—é—á–∞
    if api_key.endswith(expected_ending):
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –∫–ª—é—á")
    else:
        print(f"‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä—ã–π –∫–ª—é—á. –û–∂–∏–¥–∞–µ—Ç—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏–µ: {expected_ending}")
        print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ: {api_key[-6:]}")
    
    # URL —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    auth_url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json',
        'RqUID': 'f6e5e1e8-9fd1-4151-9870-e2b265cc3193',
        'Authorization': f'Basic {api_key}'
    }
    
    data = {'scope': 'GIGACHAT_API_PERS'}
    
    print(f"üåê URL: {auth_url}")
    print(f"üÜî RqUID: {headers['RqUID']}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ curl —Ñ–æ—Ä–º–∞—Ç–µ
    print("\nüìã –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π curl –∫–æ–º–∞–Ω–¥–∞:")
    curl_cmd = f"""curl -L -X POST '{auth_url}' \\
  -H 'Content-Type: application/x-www-form-urlencoded' \\
  -H 'Accept: application/json' \\
  -H 'RqUID: {headers['RqUID']}' \\
  -H 'Authorization: Basic {api_key}' \\
  --data-urlencode 'scope=GIGACHAT_API_PERS'"""
    print(curl_cmd)
    print()
    
    print("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å (—Å allow_redirects=True)...")
    
    try:
        response = requests.post(
            auth_url, 
            headers=headers, 
            data=data, 
            verify=False,
            timeout=10,
            allow_redirects=True
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            access_token = result.get('access_token', '')
            print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {access_token[:20]}...")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
            return False
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç GigaChat API")
    print("=" * 40)
    
    success = quick_test()
    
    print("=" * 40)
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üòû –¢–µ—Å—Ç –Ω–µ—É–¥–∞—á–Ω—ã–π")
        sys.exit(1)
