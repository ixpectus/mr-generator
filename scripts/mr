#!/bin/bash

# MR Generator - —É–¥–æ–±–Ω—ã–π wrapper –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π MR
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./mr [–æ–ø—Ü–∏–∏] <–ø—É—Ç—å_–∫_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é>

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "ü§ñ MR Description Generator - –ë—ã—Å—Ç—Ä—ã–π wrapper"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏] <–ø—É—Ç—å_–∫_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é>"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -p, --provider PROVIDER   –ü—Ä–æ–≤–∞–π–¥–µ—Ä (deepseek|gigachat, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: deepseek)"
    echo "  -b, --branch BRANCH       –í–µ—Ç–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ç–µ–∫—É—â–∞—è)"
    echo "  -o, --output FILE         –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª"
    echo "  -l, --language LANG       –Ø–∑—ã–∫ (ru|en, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ru)"
    echo "  -d, --dry-run            –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º"
    echo "  -t, --no-technical       –ë–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π"
    echo "  -h, --help               –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 ~/projects/my-app"
    echo "  $0 -p gigachat -o desc.md ~/projects/my-app"
    echo "  $0 -d -b feature/auth ~/projects/my-app"
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
PROVIDER="deepseek"
BRANCH=""
OUTPUT=""
LANGUAGE="ru"
DRY_RUN=""
NO_TECHNICAL=""
REPO_PATH=""

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        -p|--provider)
            PROVIDER="$2"
            shift 2
            ;;
        -b|--branch)
            BRANCH="$2"
            shift 2
            ;;
        -o|--output)
            OUTPUT="$2"
            shift 2
            ;;
        -l|--language)
            LANGUAGE="$2"
            shift 2
            ;;
        -d|--dry-run)
            DRY_RUN="--dry-run"
            shift
            ;;
        -t|--no-technical)
            NO_TECHNICAL="--no-technical"
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        -*)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1${NC}"
            show_help
            exit 1
            ;;
        *)
            if [ -z "$REPO_PATH" ]; then
                REPO_PATH="$1"
            else
                echo -e "${RED}‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤${NC}"
                show_help
                exit 1
            fi
            shift
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é —É–∫–∞–∑–∞–Ω
if [ -z "$REPO_PATH" ]; then
    echo -e "${RED}‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é${NC}"
    show_help
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "$REPO_PATH" ]; then
    echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $REPO_PATH${NC}"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -f "venv/bin/activate" ]; then
    echo -e "${YELLOW}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ ! -f "venv/lib/python3.*/site-packages/requests" ]; then
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    pip install -q --upgrade pip
    pip install -q -r requirements.txt
fi

# –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
COMMAND="python mr_generator.py --provider $PROVIDER --repo-path \"$REPO_PATH\""

if [ -n "$BRANCH" ]; then
    COMMAND="$COMMAND --branch $BRANCH"
fi

if [ -n "$OUTPUT" ]; then
    COMMAND="$COMMAND --output $OUTPUT"
fi

if [ -n "$LANGUAGE" ]; then
    COMMAND="$COMMAND --language $LANGUAGE"
fi

if [ -n "$DRY_RUN" ]; then
    COMMAND="$COMMAND $DRY_RUN"
fi

if [ -n "$NO_TECHNICAL" ]; then
    COMMAND="$COMMAND $NO_TECHNICAL"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å
echo -e "${BLUE}ü§ñ MR Description Generator${NC}"
echo -e "${BLUE}============================${NC}"
echo -e "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${GREEN}$REPO_PATH${NC}"
echo -e "üß† –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${GREEN}$PROVIDER${NC}"
echo -e "üåê –Ø–∑—ã–∫: ${GREEN}$LANGUAGE${NC}"

if [ -n "$BRANCH" ]; then
    echo -e "üåø –í–µ—Ç–∫–∞: ${GREEN}$BRANCH${NC}"
fi

if [ -n "$DRY_RUN" ]; then
    echo -e "üß™ –†–µ–∂–∏–º: ${YELLOW}–¢–µ—Å—Ç–æ–≤—ã–π (dry-run)${NC}"
fi

echo ""

# –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
eval $COMMAND
